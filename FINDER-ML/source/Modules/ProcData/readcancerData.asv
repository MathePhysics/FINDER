function [Datas,parameters] = readcancerData(parameters, methods)
% Read cancer data
T = readtable(parameters.data.name);


%My Additions============
%========================
labels = T.Properties.VariableNames;
labels = cellfun( @(str) regexprep(str,'[^a-zA-Z\s]',''), labels, 'UniformOutput', false);
labels = categorical(labels);
unique_labels = categories(labels);

[~,itypeA] = max(countcats(labels));
[~,itypeB] = min(countcats(labels));

parameters.data.typeA = unique_labels{itypeA};
parameters.data.typeB = unique_labels{itypeB};
%========================
%========================

AData = table2array(T(:,startsWith(T.Properties.VariableNames, parameters.data.typeA)));
BData = table2array(T(:,startsWith(T.Properties.VariableNames, parameters.data.typeB)));
%BData = table2array(T(:,startsWith(T.Properties.VariableNames, parameters.data.typeA)));

if isempty(parameters.data.numofgene)
    parameters.data.numofgene = height(T);
end





% normalization
if parameters.data.normalize == 1 %&& parameters.data.generealization == 0
    AData = methods.all.normalizedata(AData); %previously tumData
    BData = methods.all.normalizedata(BData); %previously normData
end

Datas.rawdata.T = T;
Datas.rawdata.AData = AData;
Datas.rawdata.BData = BData;

%generate synthetic data 
if parameters.data.generealization == 1
    [Datas, parameters]=methods.Multi.generateData(Datas, methods, parameters);
    %Compute Sine Transform 
    Datas.rawdata.AData = parameters.data.functionTransform(AData);
    Datas.rawdata.BData = parameters.data.functionTransform(BData);
elseif parameters.data.generealization == 0

    if isempty(parameters.data.Kfold)
        NB = size(Datas.rawdata.BData,2);
        parameters.data.Kfold = ceil(NB / 8);
    end

    parameters.data.NAvals = floor()

end

parameters.transform.istransformed = false;



end